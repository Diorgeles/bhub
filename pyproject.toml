[tool.django-stubs]
django_settings_module = "bhub.settings"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["F", "I", "E", "W", "S", "PT014"]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  # at least this three should be fine in tests:
  "S101", # asserts allowed in tests...
  "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
  # The below are debateable
  "PLR2004", # Magic value used in comparison, ...
  "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.isort]
profile = "black"

# Funciona melhor no helix
[tool.pyright]
useLibraryCodeForTypes = false 
reportMissingImports = true
reportUnusedImport = false
reportUnusedVariable = false
reportUnusedFunction = false
reportUnusedClass = false
reportUndefinedVariable = false
reportDuplicateImport = "warning"
reportGeneralTypeIssues = "warning"

[tool.pytest.ini_options]
python_files = "tests/**/*.py"
DJANGO_SETTINGS_MODULE = "bhub.settings"
addopts = "-p no:warnings"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_level = "INFO"

[tool.coverage.run]
omit = [
  "*/.local/*",
  "/usr/*",
  "utils/tirefire.py",
  "*venv/*",
  "*venv/bin/*",
  "*venv/include/*",
  "*venv/lib/*",
  "*manage.py",
  "*admin.py",
  "*/settings.py",
  "*/local_settings.py",
  "*/tests/*",
  "*apps.py",
  "*/migrations/*",
  "*asgi.py",
  "*wsgi.py",
  "*__init__*",
  "*/__pycache__/*",
  "*/site-packages/*",
  "*/distutils/*c",
]

[tool.coverage.report]
ignore_errors = true
